#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.4 on Sun Jan 26 20:12:07 2014

import wx,os
from lib import gate
import sqlite3 as mysql
from dboperations import db_operations
from admin_dash import admin_dash_b
import hashlib
from user_operations import user_operations
# begin wxGlade: extracode
# end wxGlade




class secret_win(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: secret_win.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, -1, "School Name")
        self.text_ctrl_1 = wx.TextCtrl(self, -1, "")
        self.label_2 = wx.StaticText(self, -1, "School Code")
        self.text_ctrl_2 = wx.TextCtrl(self, -1, "")
        self.button_1 = wx.Button(self, -1, "Save")
        self.DB=db_operations()
        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.on_save, self.button_1)
        self.on_load()
        self.Center()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: secret_win.__set_properties
        self.SetTitle("Secret Window")
        self.SetSize((500, 250))
        self.text_ctrl_1.SetMinSize((220, 30))
        
        self.text_ctrl_2.SetMinSize((220, 30))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: secret_win.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.BoxSizer(wx.VERTICAL)
        sizer_8 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_6.Add(self.label_1, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_3.Add(sizer_6, 1, wx.EXPAND, 10)
        sizer_7.Add(self.text_ctrl_1, 0, 0, 0)
        sizer_3.Add(sizer_7, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_3, 1, wx.ALL | wx.EXPAND, 10)
        sizer_8.Add(self.label_2, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_4.Add(sizer_8, 1, wx.EXPAND, 0)
        sizer_9.Add(self.text_ctrl_2, 0, 0, 0)
        sizer_4.Add(sizer_9, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_4, 1, wx.EXPAND, 0)
        sizer_5.Add(self.button_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add(sizer_5, 1, wx.EXPAND, 0)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        self.Center()
        # end wxGlade

    def on_save(self, event):  # wxGlade: secret_win.<event_handler>
        self.DB.Set_School_Name(self.text_ctrl_1.Value)
        self.DB.Set_School_Code(self.text_ctrl_2.Value)
        dlg = wx.MessageDialog(self, 'Done', '',wx.OK | wx.ICON_INFORMATION)                  
        dlg.ShowModal()
        dlg.Destroy()
        self.Close()
        event.Skip()
    def on_load(self):
        self.text_ctrl_1.Value=self.DB.Get_School_Name()
        self.text_ctrl_2.Value=self.DB.Get_School_Code()
# end of class secret_win






class win_login(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: Login.__init__
        kwds["style"] = wx.ICONIZE | wx.CAPTION | wx.MINIMIZE | wx.CLOSE_BOX | wx.MINIMIZE_BOX
        wx.Frame.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, -1, "Username")
        self.combo_box_1 = wx.ComboBox(self, -1, choices=["Select", "admin", "teacher"], style=wx.CB_DROPDOWN)
        self.label_2 = wx.StaticText(self, -1, "Password")
        self.text_ctrl_1 = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_TAB | wx.TE_PASSWORD)
        self.button_1 = wx.Button(self, -1, "Cancel")
        self.button_2 = wx.Button(self, -1, "Login")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_COMBOBOX, self.OnCombo_Change, self.combo_box_1)
        self.Bind(wx.EVT_BUTTON, self.OnCancel_Click, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.OnLogin_Click, self.button_2)  
              
        self.Bind(wx.EVT_TEXT,self.OnText_Change,self.text_ctrl_1)
        
        #self.Bind(wx.EVT_KEY_DOWN,self.OnKeyPress,self.text_ctrl_1)
        self.Bind(wx.EVT_CLOSE,self.on_close,self)
        self.text_ctrl_1.Bind(wx.EVT_KEY_DOWN, self.OnKeyPress)
        self.UO=user_operations(self)
        # DB Connection obj
        
        
        
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: Login.__set_properties
        self.SetTitle("Login")
        #_icon = wx.EmptyIcon()
        #_icon.CopyFromBitmap(wx.Bitmap("/media/f67bc164-f440-4c0f-9e9b-3ad70ff1adc2/home/asif/Desktop/waiter animation/2.gif", wx.BITMAP_TYPE_ANY))
        #self.SetIcon(_icon)
        self.SetSize((462, 239))
        self.SetFocus()
        self.label_1.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.combo_box_1.SetSelection(0)
        self.label_2.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.text_ctrl_1.SetMinSize((185, 30))
        self.button_1.SetMinSize((85, 35))
        self.button_1.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Ubuntu"))
        self.button_2.SetMinSize((85, 35))
        self.button_2.Disable()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: Login.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(3, 2, 0, 0)
        grid_sizer_1.Add(self.label_1, 0, wx.LEFT, 20)
        grid_sizer_1.Add(self.combo_box_1, 0, 0, 0)
        grid_sizer_1.Add(self.label_2, 0, wx.LEFT, 20)
        grid_sizer_1.Add(self.text_ctrl_1, 0, 0, 0)
        grid_sizer_1.Add(self.button_1, 0, wx.LEFT | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 50)
        grid_sizer_1.Add(self.button_2, 0, wx.RIGHT | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 50)
        sizer_1.Add(grid_sizer_1, 1, wx.TOP | wx.EXPAND, 50)
        self.SetSizer(sizer_1)
        self.Layout()
        self.Centre()
        
        # end wxGlade

    def OnCancel_Click(self, event):  # wxGlade: Login.<event_handler>
        
        self.Close()
        event.Skip()

    def OnLogin_Click(self, event):  # wxGlade: Login.<event_handler>
        
        user=self.combo_box_1.Value
        if self.text_ctrl_1.Value=='abracadabra':
            sec=secret_win(self,-1,'')
            sec.Show()
            self.text_ctrl_1.Value=''
        else:
            
            if self.UO.Login_Check(user,self.text_ctrl_1.Value):
                if user=='admin':
                    
                    dash=admin_dash_b(self,-1,'')
                    dash.Show(True)
                    
                elif self.combo_box_1.Value=='teacher':
                    
                    gat=gate(self,-1,'')
                    gat.Show(True)
                
                self.Hide()
                
            else:
                self.text_ctrl_1.Value=""
                event.Skip()

    def OnCombo_Change(self, event):  # wxGlade: Login.<event_handler>
        
       
        
        self.text_ctrl_1.Value=""
        if self.combo_box_1.Value!="Select":
            self.text_ctrl_1.SetFocus()
        else:
            self.button_2.Disable()
        event.Skip()
        
    def OnKeyPress(self,event):
        user=self.combo_box_1.Value
        if event.GetKeyCode()==13 and self.button_2.Enabled==True:
            if self.UO.Login_Check(user,self.text_ctrl_1.Value):
                if user=='admin':
                    
                    dash=admin_dash_b(self,-1,'')
                    dash.Show(True)
                    
                elif self.combo_box_1.Value=='teacher':
                    
                    gat=gate(self,-1,'')
                    gat.Show(True)
                
                self.Hide()
                
            else:
                self.text_ctrl_1.Value=""
                event.Skip()

        event.Skip()
    def OnText_Change(self,event):
        
        
        if self.combo_box_1.Value!="Select" and self.text_ctrl_1.Value!="":
            self.button_2.Enable()
            
        else:
            self.button_2.Disable()
            
        event.Skip()
        
    def on_close(self,event):
        try:
            os.remove("/tmp/.smart-lock")
        except:
            pass
        event.Skip()





