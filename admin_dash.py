#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.4 on Sat Sep 13 14:10:02 2014

import wx,gettext
from settings import ce_settings,school_working_days
from institution import institution
from promotion_list import Promotion_List,promo_window
import os,sys,subprocess
from add_div import add_div
from import_win import import_excel
from delete_students import delete_student
from promote import promote
from dboperations import db_operations
from user_operations import win_chng_pass
from lib import gate
from about import About
from custom_report  import custom_report
from sampoorna_gui import sampoorna_win
import gettext
from software_updation import update_win
from student_profile import student_profile
dir = os.path.split(sys.argv[0])[0]
path=dir+'/Resources/img/'

import THEME



class admin_dash_b(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: admin_dash.__init__
        kwds["style"] = wx.CAPTION | wx.CLOSE_BOX | wx.MINIMIZE_BOX | wx.MAXIMIZE | wx.MAXIMIZE_BOX | wx.SYSTEM_MENU | wx.RESIZE_BORDER | wx.CLIP_CHILDREN
        wx.Frame.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, -1, "Admin Dash Board")
        self.panel_1 = wx.Panel(self, -1)
        self.button_institution = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"institution.jpg", wx.BITMAP_TYPE_ANY))
        self.label_institution = wx.StaticText(self.panel_1, -1, "Institution")
        self.button_division = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"div.jpg", wx.BITMAP_TYPE_ANY))
        self.label_division = wx.StaticText(self.panel_1, -1, "Year and Division")
        self.button_ce = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"ce.jpg", wx.BITMAP_TYPE_ANY))
        self.label_ce = wx.StaticText(self.panel_1, -1, "CE & TE Settings")
        self.button_days = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"days.jpg", wx.BITMAP_TYPE_ANY))
        self.label_days = wx.StaticText(self.panel_1, -1, "Working Days")
        self.button_mark = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"enter.jpg", wx.BITMAP_TYPE_ANY))
        self.label_mark = wx.StaticText(self.panel_1, -1, "Mark Entry")
        self.button_consolidated = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"consolidated.jpg", wx.BITMAP_TYPE_ANY))
        self.label_consolidated = wx.StaticText(self.panel_1, -1, "Custom Reports")
        self.button_promo = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"promotion.jpg", wx.BITMAP_TYPE_ANY))
        self.label_promo = wx.StaticText(self.panel_1, -1, "Promotion List")        
        self.button_promote = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"promote.jpg", wx.BITMAP_TYPE_ANY))
        self.label_promote = wx.StaticText(self.panel_1, -1, "Promote/Change Class")
        self.button_import_db = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"import.jpg", wx.BITMAP_TYPE_ANY))
        self.label_import_db = wx.StaticText(self.panel_1, -1, "Import Database")
        self.button_import_excel = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"import_excel.jpg", wx.BITMAP_TYPE_ANY))
        self.label_import_excel = wx.StaticText(self.panel_1, -1, "Import Excel")
        self.button_export = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"export_db.jpg", wx.BITMAP_TYPE_ANY))
        self.label_export = wx.StaticText(self.panel_1, -1, "Export Database")
        self.button_password = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"pass.jpg", wx.BITMAP_TYPE_ANY))
        self.label_password = wx.StaticText(self.panel_1, -1, "Change Password")
        self.button_about = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"about.jpg", wx.BITMAP_TYPE_ANY))
        self.label_about = wx.StaticText(self.panel_1, -1, "About")
        
        
        self.button_help = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"help.jpg", wx.BITMAP_TYPE_ANY))
        self.label_help = wx.StaticText(self.panel_1, -1, "Help")
        #soft updt
        self.button_remove = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"update.jpg", wx.BITMAP_TYPE_ANY))
        self.label_remove = wx.StaticText(self.panel_1, -1, "Software Update")
        
        self.button_exit = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"exit.jpg", wx.BITMAP_TYPE_ANY))
        self.label_exit = wx.StaticText(self.panel_1, -1, "Exit")
        
        
        self.button_sampoorna = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"sampoorna.jpg", wx.BITMAP_TYPE_ANY))
        self.label_sampoorna = wx.StaticText(self.panel_1, -1, "Import from Sampoorna")
        
        self.button_profile = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"profile.jpg", wx.BITMAP_TYPE_ANY))
        self.label_profile = wx.StaticText(self.panel_1, -1, "Manage Students")
        
        self.button_email = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"email.jpg", wx.BITMAP_TYPE_ANY))
        self.label_email = wx.StaticText(self.panel_1, -1, "Email")
        
        self.button_sms = wx.BitmapButton(self.panel_1, -1, wx.Bitmap(path+"sms.jpg", wx.BITMAP_TYPE_ANY))
        self.label_sms = wx.StaticText(self.panel_1, -1, "SMS")
        
        self.label_font=wx.Font(9, wx.DEFAULT, wx.ITALIC, wx.BOLD, 0, "")
        self.label_fg_color=THEME.LABEL_FG_COLOR_ADMIN_DASH_ICONS
        
        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.on_institution, self.button_institution)
        self.Bind(wx.EVT_BUTTON, self.on_division, self.button_division)
        self.Bind(wx.EVT_BUTTON, self.on_ce, self.button_ce)
        self.Bind(wx.EVT_BUTTON, self.on_workingdays, self.button_days)
        self.Bind(wx.EVT_BUTTON, self.on_entry, self.button_mark)
        self.Bind(wx.EVT_BUTTON, self.on_custom, self.button_consolidated)
        self.Bind(wx.EVT_BUTTON, self.on_promotion, self.button_promo)
        self.Bind(wx.EVT_BUTTON, self.on_software_update, self.button_remove)
        self.Bind(wx.EVT_BUTTON, self.on_promote, self.button_promote)
        self.Bind(wx.EVT_BUTTON, self.on_import_db, self.button_import_db)
        self.Bind(wx.EVT_BUTTON, self.on_import_excel, self.button_import_excel)
        self.Bind(wx.EVT_BUTTON, self.on_export_db, self.button_export)
        self.Bind(wx.EVT_BUTTON, self.on_password, self.button_password)       
        self.Bind(wx.EVT_BUTTON, self.on_help, self.button_help)
        
        self.Bind(wx.EVT_BUTTON, self.on_profile, self.button_profile)
        self.Bind(wx.EVT_BUTTON, self.on_sms, self.button_sms)
        self.Bind(wx.EVT_BUTTON, self.on_email, self.button_email)
        self.Bind(wx.EVT_BUTTON, self.on_sampoorna, self.button_sampoorna)
        
        self.Bind(wx.EVT_BUTTON, self.on_about, self.button_about)
        self.Bind(wx.EVT_BUTTON, self.on_exit, self.button_exit)
        
        self.DB=db_operations()
        self.Bind(wx.EVT_CLOSE, self.on_close)
        
        self.button_institution.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_institution.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_division.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_division.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_ce.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_ce.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_days.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_days.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_mark.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_mark.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_consolidated.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_consolidated.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_promo.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_promo.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_remove.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_remove.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_promote.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_promote.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_import_db.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_import_db.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_import_excel.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_import_excel.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_export.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_export.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_password.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_password.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_help.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_help.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_sampoorna.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_sampoorna.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_sms.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_sms.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_email.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_email.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_profile.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_profile.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_about.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_about.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        self.button_exit.Bind(wx.EVT_ENTER_WINDOW,self.on_mouse_enter)
        self.button_exit.Bind(wx.EVT_LEAVE_WINDOW,self.on_mouse_leave)
        
        
        
                
        

        # end wxGlade

    def __set_properties(self):
        self.SetTitle("Dash Board")
        self.SetBackgroundColour(THEME.WINDOW_BG_COLOR)
        self.SetForegroundColour(THEME.WINDOW_FG_COLOR)
        self.SetFocus()
        self.label_1.SetForegroundColour(THEME.LABEL_FG_COLOR_GREEN)#wx.Colour(107, 142, 35))
        self.label_1.SetFont(wx.Font(23, wx.DEFAULT, wx.ITALIC, wx.BOLD, 0, ""))
        
        self.label_institution.SetForegroundColour(self.label_fg_color)
        self.label_institution.SetFont(self.label_font)
        self.button_division.SetSize(self.button_division.GetBestSize())
        self.label_division.SetForegroundColour(self.label_fg_color)
        self.label_division.SetFont(self.label_font)
        self.button_ce.SetSize(self.button_ce.GetBestSize())
        self.label_ce.SetForegroundColour(self.label_fg_color)
        self.label_ce.SetFont(self.label_font)
        self.button_days.SetSize(self.button_days.GetBestSize())
        self.label_days.SetForegroundColour(self.label_fg_color)
        self.label_days.SetFont(self.label_font)
        
        self.label_mark.SetForegroundColour(self.label_fg_color)
        self.label_mark.SetFont(self.label_font)
        self.button_consolidated.SetSize(self.button_consolidated.GetBestSize())
        self.label_consolidated.SetForegroundColour(self.label_fg_color)
        self.label_consolidated.SetFont(self.label_font)
        self.button_promo.SetSize(self.button_promo.GetBestSize())
        self.label_promo.SetForegroundColour(self.label_fg_color)
        self.label_promo.SetFont(self.label_font)
        self.button_remove.SetSize(self.button_remove.GetBestSize())
        self.label_remove.SetForegroundColour(self.label_fg_color)
        self.label_remove.SetFont(self.label_font)
        self.button_promote.SetSize(self.button_promote.GetBestSize())
        self.label_promote.SetForegroundColour(self.label_fg_color)
        self.label_promote.SetFont(self.label_font)
        self.button_import_db.SetSize(self.button_import_db.GetBestSize())
        self.label_import_db.SetForegroundColour(self.label_fg_color)
        self.label_import_db.SetFont(self.label_font)
        self.button_import_excel.SetSize(self.button_import_excel.GetBestSize())
        self.label_import_excel.SetForegroundColour(self.label_fg_color)
        self.label_import_excel.SetFont(self.label_font)
        self.button_export.SetSize(self.button_export.GetBestSize())
        self.label_export.SetForegroundColour(self.label_fg_color)
        self.label_export.SetFont(self.label_font)
        self.button_password.SetSize(self.button_password.GetBestSize())
        self.label_password.SetForegroundColour(self.label_fg_color)
        self.label_password.SetFont(self.label_font)
        self.button_help.SetSize(self.button_help.GetBestSize())
        self.label_help.SetForegroundColour(self.label_fg_color)
        self.label_help.SetFont(self.label_font)
        self.button_about.SetSize(self.button_about.GetBestSize())
        self.label_about.SetForegroundColour(self.label_fg_color)
        self.label_about.SetFont(self.label_font)
        self.button_exit.SetSize(self.button_exit.GetBestSize())
        self.label_exit.SetForegroundColour(self.label_fg_color)
        self.label_exit.SetFont(self.label_font)
        
        self.button_sampoorna.SetSize(self.button_exit.GetBestSize())
        self.label_sampoorna.SetForegroundColour(self.label_fg_color)
        self.label_sampoorna.SetFont(self.label_font)
        
        self.button_profile.SetSize(self.button_exit.GetBestSize())
        self.label_profile.SetForegroundColour(self.label_fg_color)
        self.label_profile.SetFont(self.label_font)    
        
        self.button_email.SetSize(self.button_exit.GetBestSize())
        self.label_email.SetForegroundColour(self.label_fg_color)
        self.label_email.SetFont(self.label_font)
        
        self.button_sms.SetSize(self.button_exit.GetBestSize())
        self.label_sms.SetForegroundColour(self.label_fg_color)
        self.label_sms.SetFont(self.label_font)
        
        
        
        self.panel_1.SetBackgroundColour(THEME.WINDOW_BG_COLOR)
        self.panel_1.SetForegroundColour(THEME.WINDOW_FG_COLOR)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: admin_dash.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1 = wx.GridSizer(5, 4, 10, 10)
        
        sizer_22 = wx.BoxSizer(wx.VERTICAL)
        sizer_23 = wx.BoxSizer(wx.VERTICAL)
        sizer_24 = wx.BoxSizer(wx.VERTICAL)
        sizer_25 = wx.BoxSizer(wx.VERTICAL)
        
        sizer_17 = wx.BoxSizer(wx.VERTICAL)
        sizer_21 = wx.BoxSizer(wx.VERTICAL)
        sizer_20 = wx.BoxSizer(wx.VERTICAL)
        sizer_19 = wx.BoxSizer(wx.VERTICAL)
        sizer_18 = wx.BoxSizer(wx.VERTICAL)
        sizer_16 = wx.BoxSizer(wx.VERTICAL)
        sizer_15 = wx.BoxSizer(wx.VERTICAL)
        sizer_14 = wx.BoxSizer(wx.VERTICAL)
        sizer_13 = wx.BoxSizer(wx.VERTICAL)
        sizer_12 = wx.BoxSizer(wx.VERTICAL)
        sizer_11 = wx.BoxSizer(wx.VERTICAL)
        sizer_10 = wx.BoxSizer(wx.VERTICAL)
        sizer_9 = wx.BoxSizer(wx.VERTICAL)
        sizer_8 = wx.BoxSizer(wx.VERTICAL)
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        
        
        sizer_3.Add(self.label_1, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_2.Add(sizer_3, 0, wx.ALL | wx.EXPAND, 10)
        
        sizer_6.Add(self.button_institution, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_6.Add(self.label_institution, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_6, 1, wx.EXPAND, 0)
        
        
        sizer_7.Add(self.button_division, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_7.Add(self.label_division, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_7, 1, wx.EXPAND, 0)
        
        
        sizer_8.Add(self.button_ce, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_8.Add(self.label_ce, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_8, 1, wx.EXPAND, 0)
        
        
        sizer_22.Add(self.button_profile, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_22.Add(self.label_profile, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_22, 1, wx.EXPAND, 0)
        
        
        sizer_9.Add(self.button_days, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_9.Add(self.label_days, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_9, 1, wx.EXPAND, 0)
        
        sizer_10.Add(self.button_mark, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_10.Add(self.label_mark, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_10, 1, wx.EXPAND, 0)
        
        sizer_11.Add(self.button_consolidated, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_11.Add(self.label_consolidated, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_11, 1, wx.EXPAND, 0)
        
        sizer_12.Add(self.button_promo, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_12.Add(self.label_promo, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_12, 1, wx.EXPAND, 0)
        
        
        
        sizer_14.Add(self.button_promote, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_14.Add(self.label_promote, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_14, 1, wx.EXPAND, 0)
        
        
        sizer_25.Add(self.button_sampoorna, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_25.Add(self.label_sampoorna, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_25, 1, wx.EXPAND, 0)
        
        
        
        sizer_15.Add(self.button_import_db, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_15.Add(self.label_import_db, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_15, 1, wx.EXPAND, 0)
        
        sizer_16.Add(self.button_import_excel, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_16.Add(self.label_import_excel, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_16, 1, wx.EXPAND, 0)
        
        sizer_18.Add(self.button_export, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_18.Add(self.label_export, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_18, 1, wx.EXPAND, 0)
        
        sizer_19.Add(self.button_password, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_19.Add(self.label_password, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_19, 1, wx.EXPAND, 0)
        
        
        
        
        sizer_23.Add(self.button_email, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_23.Add(self.label_email, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_23, 1, wx.EXPAND, 0) 
        
        sizer_24.Add(self.button_sms, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_24.Add(self.label_sms, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_24, 1, wx.EXPAND, 0)
        
       
        
        sizer_20.Add(self.button_help, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_20.Add(self.label_help, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_20, 1, wx.EXPAND, 0)
        
        sizer_21.Add(self.button_about, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_21.Add(self.label_about, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_21, 1, wx.EXPAND, 0)
        
        
        
        sizer_13.Add(self.button_remove, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_13.Add(self.label_remove, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_13, 1, wx.EXPAND, 0)
        
        
        
        sizer_17.Add(self.button_exit, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_17.Add(self.label_exit, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer_1.Add(sizer_17, 1, wx.EXPAND, 0)
        
        sizer_5.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        sizer_4.Add(sizer_5, 1, wx.EXPAND, 0)
        self.panel_1.SetSizer(sizer_4)
        sizer_2.Add(self.panel_1, 1, wx.ALL | wx.EXPAND, 15)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        self.Centre()
        # end wxGlade
    def on_institution(self, event):  # wxGlade: admin_dash.<event_handler>
        inst=institution(self)
        inst.ShowModal()
        self.label_institution.SetForegroundColour(self.label_fg_color)
        inst.Destroy()
        event.Skip()

    def on_division(self, event):  # wxGlade: admin_dash.<event_handler>
        div=add_div(self)
        div.ShowModal()
        self.label_division.SetForegroundColour(self.label_fg_color)
        div.Destroy()
        event.Skip()

    def on_ce(self, event):  # wxGlade: admin_dash.<event_handler>
        ce=ce_settings(self)
        
        
        ce.ShowModal()
        ce.Destroy()
        self.label_ce.SetForegroundColour(self.label_fg_color)
        event.Skip()

    def on_workingdays(self, event):  # wxGlade: admin_dash.<event_handler>
        working_d=school_working_days(self)
        
        working_d.ShowModal()
        self.label_days.SetForegroundColour(self.label_fg_color)
        working_d.Destroy()
        event.Skip()

    def on_entry(self, event):  # wxGlade: admin_dash.<event_handler>
        gate_=gate(self,-1,'')
        gate_.Show()
        self.label_mark.SetForegroundColour(self.label_fg_color)
        event.Skip()

    def on_custom(self, event):  # wxGlade: admin_dash.<event_handler>
        C=custom_report(self,-1,"")
        try:
            C.ShowModal()
            C.Destroy()
        
        except:
            
            dlg = wx.MessageDialog(self, 'Some error occured', 'Error',wx.OK | wx.ICON_ERROR)
            dlg.ShowModal()
            dlg.Destroy()
            
        event.Skip()
        self.label_consolidated.SetForegroundColour(self.label_fg_color)
    def on_promotion(self, event):  # wxGlade: admin_dash.<event_handler>
        dir = "/home"
        dlg=promo_window(self,-1,'')
        dlg.ShowModal()
        divs= dlg.get_div()
        dlg.Destroy()
        
        self.label_promo.SetForegroundColour(self.label_fg_color)
        if divs!=[]:
            dir_dlg=wx.DirDialog(self, message='Choose Folder...', defaultPath=dir, style=wx.DD_DEFAULT_STYLE)#wx.OVERWRITE_PROMPT
            if dir_dlg.ShowModal() == wx.ID_OK:
                
                path = dir_dlg.GetPath()
                
                for each in divs:
                    
                    
                    year=each[0]
                    class_=each[1]
                    div=each[2]
                    deo=self.DB.Get_School_DEO()
                    school=self.DB.Get_School_Name()
                    w_d=self.DB.Get_Working_Days(year,'3')
                    each_path=path+"/"+class_+div+".pdf"
                    self.P=Promotion_List(year,school,class_,div,deo,w_d,path=each_path)
                    self.P.run(open=False)
                    #self.P=None
                        
                os.system("nautilus "+path)
        event.Skip()

    def on_software_update(self, event):  # wxGlade: admin_dash.<event_handler>
        '''delete=delete_student(self)
        delete.ShowModal()
        self.label_remove.SetForegroundColour(self.label_fg_color)
        delete.Destroy()'''
        soft_upd=update_win(self)
        soft_upd.ShowModal()
        try:
            soft_upd.Destroy()
        except:
            pass
        self.label_remove.SetForegroundColour(self.label_fg_color)
        event.Skip()

    def on_promote(self, event):  # wxGlade: admin_dash.<event_handler>
        promo=promote(self)
        promo.ShowModal()
        self.label_promote.SetForegroundColour(self.label_fg_color)
        promo.Destroy()
        event.Skip()

    def on_import_db(self, event):  # wxGlade: admin_dash.<event_handler>
        '''
        msg="This feature is suspended"
        dlg = wx.MessageDialog(self, msg, '',wx.OK | wx.ICON_INFORMATION)                  
        dlg.ShowModal()
        dlg.Destroy()
        return 0
        '''

        
        
        
        
        msg="Importing may overwrite some of the existing data \n Do you want to continue?"
        dlg = wx.MessageDialog(self, msg)#,wx.SAVE|wx.ICON_QUESTION)            
        if dlg.ShowModal() == wx.ID_OK:
            
            
            dir = "/home"
            
            

            wcd="Exam Files(*.xam)|*.xam|"
            open_dlg = wx.FileDialog(self, message='Choose a file', defaultDir=dir, defaultFile='',  wildcard=wcd, style=wx.OPEN|wx.CHANGE_DIR)
            if open_dlg.ShowModal() == wx.ID_OK:
                
                path = open_dlg.GetPath()                
                 
                try:   
                
                
                    self.DB.import_(path)
                    dlg = wx.MessageDialog(self, 'Successfully imported', '',wx.OK | wx.ICON_INFORMATION)    
                    
                        
                except:
                    dlg = wx.MessageDialog(self, 'Sorry, Could not import', '',wx.OK | wx.ICON_ERROR)    
                                  
                dlg.ShowModal()
                dlg.Destroy()
                

           
                    
        self.label_import_db.SetForegroundColour(self.label_fg_color)
        event.Skip()

    def on_import_excel(self, event):  # wxGlade: admin_dash.<event_handler>
        excel=import_excel(self)
        excel.ShowModal()
        self.label_import_excel.SetForegroundColour(self.label_fg_color)
        excel.Destroy()
        event.Skip()

    def on_export_db(self, event):  # wxGlade: admin_dash.<event_handler>
        import time
        
        mytime=time.localtime()# returns year, month,date,etc
        filename="Full_DB_"+str(mytime[2])+"_"+str(mytime[1])+"_"+str(mytime[0])
        
        wcd="Exam Files(*.xam)|*.xam|"
        dir = "/home"
        save_dlg = wx.FileDialog(self, message='Save file as...', defaultDir=dir, defaultFile= filename, wildcard=wcd, style=wx.SAVE | wx.OVERWRITE_PROMPT)
        if save_dlg.ShowModal() == wx.ID_OK:
            path = save_dlg.GetPath()
            try:
                
                self.DB.export(path+".xam")
                
                dlg = wx.MessageDialog(self, 'Successfully Exported', '',wx.OK | wx.ICON_INFORMATION)                  
                dlg.ShowModal()
                dlg.Destroy()
            except:
                dlg = wx.MessageDialog(self, 'Error Exporting file\n' )
                dlg.ShowModal()
                
        save_dlg.Destroy()
        
        self.label_export.SetForegroundColour(self.label_fg_color)
        event.Skip()
    def on_profile(self,event):
        profile=student_profile(self)
        profile.ShowModal()
        profile.Destroy()
        self.label_profile.SetForegroundColour(self.label_fg_color)

    def on_sms(self,event):
        msg="This feature is not added to your account. Contact the developer at asif.kodur@gmai.com"
        dlg = wx.MessageDialog(self, msg, '',wx.OK | wx.ICON_INFORMATION)                  
        dlg.ShowModal()
        dlg.Destroy()
        self.label_sms.SetForegroundColour(self.label_fg_color)


    def on_email(self,event):
        msg="This feature is not yet activated"
        dlg = wx.MessageDialog(self, msg, '',wx.OK | wx.ICON_INFORMATION)                  
        dlg.ShowModal()
        dlg.Destroy()
        self.label_email.SetForegroundColour(self.label_fg_color)


        
    def on_sampoorna(self,event):
        
        sampoorna=sampoorna_win(self)
        sampoorna.ShowModal()
        self.label_sampoorna.SetForegroundColour(self.label_fg_color)

        sampoorna.Destroy()
        event.Skip()
    def on_password(self, event):  # wxGlade: admin_dash.<event_handler>
        passw=win_chng_pass(self)
        passw.ShowModal()
        self.label_password.SetForegroundColour(self.label_fg_color)
        passw.Destroy()
        event.Skip()
    def on_help(self,event):
        subprocess.call(["xdg-open",dir+'/docs/docs.html'])
        self.label_help.SetForegroundColour(self.label_fg_color)
    def on_about(self, event):  # wxGlade: admin_dash.<event_handler>
        ab=About(self)
        #ab.ShowModal()
        self.label_about.SetForegroundColour(self.label_fg_color)
        ab.Destroy()
        event.Skip()

    def on_exit(self, event):  # wxGlade: admin_dash.<event_handler>
        self.Close(True)
        
        event.Skip()
        
    def on_mouse_enter(self,event):
        
        id=event.GetEventObject().GetId()
        obj=None
        
        if self.button_institution.GetId()==id:
            
            obj=self.label_institution 
        elif self.button_division.GetId()==id:
            
            obj=self.label_division 
        
        elif self.button_ce.GetId()==id:
           obj= self.label_ce
        
        elif self.button_days.GetId()==id:
            
            obj=self.label_days
        elif self.button_mark.GetId()==id:
            obj=self.label_mark
            
        elif self.button_consolidated.GetId()==id:
            obj=self.label_consolidated 
        
        elif self.button_promo.GetId()==id:
            
            obj=self.label_promo
        elif self.button_remove.GetId()==id:
            
            obj=self.label_remove
        elif self.button_promote.GetId()==id:
             
            obj=self.label_promote
            
        elif self.button_import_db.GetId()==id:
            obj=self.label_import_db
        elif self.button_import_excel.GetId()==id:
            
        
            obj=self.label_import_excel
            
        elif self.button_export.GetId()==id:
            
            obj=self.label_export
        elif self.button_password.GetId()==id:
            
            obj=self.label_password
        elif self.button_about.GetId()==id:
            
            obj=self.label_about
        
        
        elif self.button_help.GetId()==id:
            
            obj=self.label_help
        
        elif self.button_exit.GetId()==id:
            obj=self.label_exit
            
        elif self.button_profile.GetId()==id:
            obj=self.label_profile
            
        elif self.button_sms.GetId()==id:
            obj=self.label_sms
            
        elif self.button_email.GetId()==id:
            obj=self.label_email
            
        elif self.button_sampoorna.GetId()==id:
            obj=self.label_sampoorna

        if obj!=None:
            obj.SetForegroundColour(wx.Colour(0, 127, 255))
        
        hand_cursor= wx.StockCursor(wx.CURSOR_HAND)
        
        self.button_institution.SetCursor(hand_cursor)
        self.button_division.SetCursor(hand_cursor)
        self.button_ce.SetCursor(hand_cursor)
        self.button_days.SetCursor(hand_cursor)
        self.button_mark.SetCursor(hand_cursor)
        self.button_consolidated.SetCursor(hand_cursor)
        self.button_promo.SetCursor(hand_cursor)
        self.button_remove.SetCursor(hand_cursor)
        self.button_promote.SetCursor(hand_cursor)
        self.button_sampoorna.SetCursor(hand_cursor)
        self.button_profile.SetCursor(hand_cursor)
        self.button_import_db.SetCursor(hand_cursor)
        self.button_import_excel.SetCursor(hand_cursor)
        self.button_export.SetCursor(hand_cursor)
        self.button_password.SetCursor(hand_cursor)
        self.button_help.SetCursor(hand_cursor)
        self.button_about.SetCursor(hand_cursor)
        self.button_exit.SetCursor(hand_cursor)
        event.Skip()
    def on_mouse_leave(self,event):
        
        
        id=event.GetEventObject().GetId()
        obj=None
        
        if self.button_institution.GetId()==id:
            
            obj=self.label_institution 
        elif self.button_division.GetId()==id:
            
            obj=self.label_division 
        
        elif self.button_ce.GetId()==id:
           obj= self.label_ce
        
        elif self.button_days.GetId()==id:
            
            obj=self.label_days
        elif self.button_mark.GetId()==id:
            obj=self.label_mark
            
        elif self.button_consolidated.GetId()==id:
            obj=self.label_consolidated 
        
        elif self.button_promo.GetId()==id:
            
            obj=self.label_promo
        elif self.button_remove.GetId()==id:
            
            obj=self.label_remove
        elif self.button_promote.GetId()==id:
             
            obj=self.label_promote
            
        elif self.button_import_db.GetId()==id:
            obj=self.label_import_db
        elif self.button_import_excel.GetId()==id:
            
            
            obj=self.label_import_excel
            
        elif self.button_export.GetId()==id:
            
            obj=self.label_export
        elif self.button_password.GetId()==id:
            
            obj=self.label_password
        elif self.button_about.GetId()==id:
            
            obj=self.label_about
        
        
        elif self.button_help.GetId()==id:
            
            obj=self.label_help
        
        elif self.button_exit.GetId()==id:
            obj=self.label_exit

        elif self.button_profile.GetId()==id:
            obj=self.label_profile
            
        elif self.button_sms.GetId()==id:
            obj=self.label_sms
            
        elif self.button_email.GetId()==id:
            obj=self.label_email
            
        elif self.button_sampoorna.GetId()==id:
            obj=self.label_sampoorna


        if obj!=None:
            obj.SetForegroundColour(self.label_fg_color)
        
        event.Skip()
    def on_close(self,event):
        if self.Parent:
            self.Parent.Close(True)
        event.Skip()
    # end of class admin_dash



if __name__ == "__main__":
    
    gettext.install("app") # replace with the appropriate catalog name
    
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    main_frame = admin_dash_b(None, wx.ID_ANY, "")
    app.SetTopWindow(main_frame)
    main_frame.Show()
    app.MainLoop()
