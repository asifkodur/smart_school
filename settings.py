#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.4 on Sat Aug  9 15:49:04 2014

import wx
from dboperations import db_operations

# begin wxGlade: extracode
# end wxGlade


class ce_settings(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame2.__init__
        kwds["style"] = wx.CAPTION | wx.CLOSE_BOX  | wx.STAY_ON_TOP | wx.FRAME_FLOAT_ON_PARENT | wx.TAB_TRAVERSAL

        wx.Dialog.__init__(self, *args, **kwds)
        #wx.Dialog.__init__(self, *args, **kwds)
        self.label_14 = wx.StaticText(self, -1, "Year")
        self.combo_box_2 = wx.ComboBox(self, -1,choices=[], style=wx.CB_DROPDOWN| wx.CB_READONLY)
        self.label_1 = wx.StaticText(self, -1, "CLASS")
        self.combo_box_1 = wx.ComboBox(self, -1, choices=["Select", "8", "9", "10"], style=wx.CB_DROPDOWN | wx.CB_DROPDOWN | wx.CB_READONLY)
        self.static_line_1 = wx.StaticLine(self, -1)
        self.label_13 = wx.StaticText(self, -1, "")
        self.label_12 = wx.StaticText(self, -1, "Max CE")
        self.TE = wx.StaticText(self, -1, "Max TE")
        self.label_2 = wx.StaticText(self, -1, "Language I")
        self.ce_1 = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER | wx.TE_PROCESS_TAB)
        self.te_1 = wx.TextCtrl(self, -1, "")
        self.label_3 = wx.StaticText(self, -1, "Malayalam")
        self.ce_2 = wx.TextCtrl(self, -1, "")
        self.te_2 = wx.TextCtrl(self, -1, "")
        self.label_4 = wx.StaticText(self, -1, "English")
        self.ce_3 = wx.TextCtrl(self, -1, "")
        self.te_3 = wx.TextCtrl(self, -1, "")
        self.label_5 = wx.StaticText(self, -1, "Hindi")
        self.ce_4 = wx.TextCtrl(self, -1, "")
        self.te_4 = wx.TextCtrl(self, -1, "")
        self.label_6 = wx.StaticText(self, -1, "SS")
        self.ce_5 = wx.TextCtrl(self, -1, "")
        self.te_5 = wx.TextCtrl(self, -1, "")
        self.label_7 = wx.StaticText(self, -1, "Physics")
        self.ce_6 = wx.TextCtrl(self, -1, "")
        self.te_6 = wx.TextCtrl(self, -1, "")
        self.label_8 = wx.StaticText(self, -1, "Chemistry")
        self.ce_7 = wx.TextCtrl(self, -1, "")
        self.te_7 = wx.TextCtrl(self, -1, "")
        self.label_9 = wx.StaticText(self, -1, "Biology")
        self.ce_8 = wx.TextCtrl(self, -1, "")
        self.te_8 = wx.TextCtrl(self, -1, "")
        self.label_10 = wx.StaticText(self, -1, "Maths")
        self.ce_9 = wx.TextCtrl(self, -1, "")
        self.te_9 = wx.TextCtrl(self, -1, "")
        self.label_11 = wx.StaticText(self, -1, "I.T")
        self.ce_10 = wx.TextCtrl(self, -1, "")
        self.te_10 = wx.TextCtrl(self, -1, "")
        self.button_1 = wx.Button(self, -1, "Close")
        self.button_2 = wx.Button(self, -1, "Save")

        self.__set_properties()
        self.__do_layout()

       
        self.Bind(wx.EVT_COMBOBOX, self.OnCombo_class, self.combo_box_1)
        self.Bind(wx.EVT_COMBOBOX, self.OnCombo_year, self.combo_box_2)
        #self.Bind(wx.EVT_TEXT_ENTER, self.OnTextEnter, self.ce_1)
        #self.Bind(wx.EVT_TEXT, self.OnTextText, self.ce_1)
        self.Bind(wx.EVT_BUTTON, self.OnCancel, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.OnSave, self.button_2)
        
        
        self.ce_1.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.ce_2.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.ce_3.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.ce_4.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.ce_5.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.ce_6.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.ce_7.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.ce_8.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.ce_9.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.ce_10.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.te_1.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.te_2.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.te_3.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.te_4.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.te_5.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.te_6.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.te_7.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.te_8.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.te_9.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        self.te_10.Bind(wx.EVT_KEY_DOWN, self.onKeyPress)
        
        
        
        
        
        self.DB=db_operations()
        self.load_year()
        
        self.Bind(wx.EVT_CLOSE, self.OnClose)
       
        # end wxGlade
    def load_year(self):
                    
        self.combo_box_2.Clear() #year combo
        
        
        years=self.DB.get_academic_year_list()
        years.insert(0,"Select Year")

        
        
        for item in years:
            self.combo_box_2.Append(str(item))
            
            
        self.combo_box_2.SetSelection(0) 
        self.combo_box_1.SetSelection(0) 
        
    def OnClose(self,event):
        
        event.Skip()
    def __set_properties(self):
        # begin wxGlade: MyFrame2.__set_properties
        self.SetTitle("CE & TE Settings")
        self.SetSize((400, 507))
        self.label_14.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.combo_box_2.SetMinSize((150, 33))
        self.label_1.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.combo_box_1.SetMinSize((100, 33))
        self.combo_box_1.SetSelection(0)
        self.combo_box_2.SetSelection(0)
        self.static_line_1.SetMinSize((380, 5))
        self.label_12.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.TE.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.ce_1.SetMinSize((50, 23))
        self.te_1.SetMinSize((50, 23))
        self.ce_2.SetMinSize((50, 23))
        self.te_2.SetMinSize((50, 23))
        self.ce_3.SetMinSize((50, 23))
        self.te_3.SetMinSize((50, 23))
        self.ce_4.SetMinSize((50, 23))
        self.te_4.SetMinSize((50, 23))
        self.ce_5.SetMinSize((50, 23))
        self.te_5.SetMinSize((50, 23))
        self.ce_6.SetMinSize((50, 23))
        self.te_6.SetMinSize((50, 23))
        self.ce_7.SetMinSize((50, 23))
        self.te_7.SetMinSize((50, 23))
        self.ce_8.SetMinSize((50, 23))
        self.te_8.SetMinSize((50, 23))
        self.ce_9.SetMinSize((50, 23))
        self.te_9.SetMinSize((50, 23))
        self.ce_10.SetMinSize((50, 23))
        self.te_10.SetMinSize((50, 23))
        self.button_1.SetMinSize((80, 33))
        self.button_2.SetMinSize((80, 33))
        self.button_2.Enabled=False
        
        
        self.YEAR=self.STD='Select'
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame2.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1 = wx.GridSizer(11, 3, 4, 5)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5.Add(self.label_14, 0, wx.TOP, 5)
        sizer_5.Add(self.combo_box_2, 0, wx.LEFT, 10)
        sizer_5.Add(self.label_1, 0, wx.LEFT | wx.TOP, 5)
        sizer_5.Add(self.combo_box_1, 0, wx.LEFT, 10)
        sizer_4.Add(sizer_5, 0, wx.LEFT | wx.EXPAND, 0)
        sizer_4.Add(self.static_line_1, 0, wx.TOP | wx.EXPAND, 10)
        grid_sizer_1.Add(self.label_13, 0, 0, 0)
        grid_sizer_1.Add(self.label_12, 0, wx.BOTTOM, 10)
        grid_sizer_1.Add(self.TE, 0, wx.BOTTOM, 10)
        grid_sizer_1.Add(self.label_2, 0, 0, 0)
        grid_sizer_1.Add(self.ce_1, 0, 0, 10)
        grid_sizer_1.Add(self.te_1, 0, 0, 10)
        grid_sizer_1.Add(self.label_3, 0, 0, 0)
        grid_sizer_1.Add(self.ce_2, 0, wx.TOP, 0)
        grid_sizer_1.Add(self.te_2, 0, wx.TOP, 0)
        grid_sizer_1.Add(self.label_4, 0, 0, 0)
        grid_sizer_1.Add(self.ce_3, 0, 0, 0)
        grid_sizer_1.Add(self.te_3, 0, 0, 0)
        grid_sizer_1.Add(self.label_5, 0, 0, 0)
        grid_sizer_1.Add(self.ce_4, 0, 0, 0)
        grid_sizer_1.Add(self.te_4, 0, 0, 0)
        grid_sizer_1.Add(self.label_6, 0, 0, 0)
        grid_sizer_1.Add(self.ce_5, 0, 0, 0)
        grid_sizer_1.Add(self.te_5, 0, 0, 0)
        grid_sizer_1.Add(self.label_7, 0, 0, 0)
        grid_sizer_1.Add(self.ce_6, 0, 0, 0)
        grid_sizer_1.Add(self.te_6, 0, 0, 0)
        grid_sizer_1.Add(self.label_8, 0, 0, 0)
        grid_sizer_1.Add(self.ce_7, 0, 0, 0)
        grid_sizer_1.Add(self.te_7, 0, 0, 0)
        grid_sizer_1.Add(self.label_9, 0, 0, 0)
        grid_sizer_1.Add(self.ce_8, 0, 0, 0)
        grid_sizer_1.Add(self.te_8, 0, 0, 0)
        grid_sizer_1.Add(self.label_10, 0, 0, 0)
        grid_sizer_1.Add(self.ce_9, 0, 0, 0)
        grid_sizer_1.Add(self.te_9, 0, 0, 0)
        grid_sizer_1.Add(self.label_11, 0, 0, 0)
        grid_sizer_1.Add(self.ce_10, 0, 0, 0)
        grid_sizer_1.Add(self.te_10, 0, 0, 0)
        grid_sizer_1.Add((0, 10), 0, 0, 0)
        sizer_4.Add(grid_sizer_1, 0, wx.ALL | wx.EXPAND, 10)
        sizer_6.Add(self.button_1, 0, wx.LEFT | wx.EXPAND, 40)
        sizer_6.Add(self.button_2, 0, wx.LEFT, 30)
        sizer_4.Add(sizer_6, 0, wx.LEFT | wx.EXPAND | wx.ALIGN_BOTTOM | wx.ALIGN_CENTER_VERTICAL | wx.SHAPED, 70)
        sizer_1.Add(sizer_4, 0, wx.ALL | wx.EXPAND, 10)
        self.SetSizer(sizer_1)
        self.Layout()
        self.Centre()
        # end wxGlade

    
   

    def OnCombo_year(self, event):  # wxGlade: MyFrame2.<event_handler>
        if self.combo_box_2.Value!='Select' and self.combo_box_1.Value!='Select':
            self.button_2.Enabled=True
        else:
            self.button_2.Enabled=False
        YEAR=self.combo_box_2.Value
        self.YEAR=YEAR.split("-")[0]
        self.Rload_CE_TE()
        event.Skip()
        
    def OnCombo_class(self, event):  # wxGlade: MyFrame2.<event_handler>
        if self.combo_box_2.Value!='Select' and self.combo_box_1.Value!='Select':
            self.button_2.Enabled=True
        else:
            self.button_2.Enabled=False
        self.STD=self.combo_box_1.Value
        self.Rload_CE_TE()
        event.Skip()
        
    def Rload_CE_TE(self):
        CE=[self.ce_1,self.ce_2,self.ce_3,self.ce_4,self.ce_5,self.ce_6,self.ce_7,self.ce_8,self.ce_9,self.ce_10]
        TE=[self.te_1,self.te_2,self.te_3,self.te_4,self.te_5,self.te_6,self.te_7,self.te_8,self.te_9,self.te_10]
        
        
        
        for i in range(10):
            if self.YEAR=='Select' or self.STD=='Select':
                CE[i].Value=''
                TE[i].Value=''
            else:
                try:
                    val1,val2=self.DB.Get_CE_TE(self.YEAR,self.STD,i)
                    
                    CE[i].Value,TE[i].Value=str(val1),str(val2)
                except:
                    CE[i].Value,TE[i].Value='',''
                    
    


        
    def onKeyPress(self, event):

        keycode = event.GetKeyCode()
       
        if keycode==8 or keycode==127 or keycode== 314 or keycode== 319 or keycode==316:#del, backspace,etc
            event.Skip()
            
        elif keycode==9 or keycode==13: # tab ,enter
            event.Skip()
        try:
            a=int(chr(keycode))# if not intiger error
            obj=event.GetEventObject()
            
            if len(obj.Value)<2:
            
                event.Skip()
        except:
            pass
            
        
    def OnCancel(self, event):  # wxGlade: MyFrame2.<event_handler>
        self.Close()
        event.Skip()

    def OnSave(self, event):  # wxGlade: MyFrame2.<event_handler>
        CE=[self.ce_1,self.ce_2,self.ce_3,self.ce_4,self.ce_5,self.ce_6,self.ce_7,self.ce_8,self.ce_9,self.ce_10]
        TE=[self.te_1,self.te_2,self.te_3,self.te_4,self.te_5,self.te_6,self.te_7,self.te_8,self.te_9,self.te_10]
        
        
        try:
            for i in range(10):
                if self.YEAR=='Select' or self.STD=='Select':
                    break
                else:
                    
                    self.DB.Set_CE_TE(self.YEAR,self.STD,i,CE[i].Value,TE[i].Value)
            dlg = wx.MessageDialog(self, 'Successfully Saved', '',wx.OK | wx.ICON_INFORMATION)
            dlg.ShowModal()
            dlg.Destroy()
        except:
            dlg = wx.MessageDialog(self, 'Error! Could not Save', '',wx.OK | wx.ICON_ERROR)
            dlg.ShowModal()
            dlg.Destroy()
                
        event.Skip()
        
        
        
        
        
        
        

class institution(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: Institution.__init__
        kwds["style"] = wx.CAPTION | wx.CLOSE_BOX  | wx.STAY_ON_TOP | wx.FRAME_FLOAT_ON_PARENT | wx.TAB_TRAVERSAL
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, -1, "Institution Settings")
        self.label_2 = wx.StaticText(self, -1, "School Name")
        self.text_ctrl_5 = wx.TextCtrl(self, -1, "",style=wx.TE_READONLY)#wx.StaticText(self, -1, "")
        self.label_4 = wx.StaticText(self, -1, "School Code")
        self.text_ctrl_6 = wx.TextCtrl(self, -1, "",style=wx.TE_READONLY)#wx.StaticText(self, -1, "")
        self.label_6 = wx.StaticText(self, -1, "E-Mail")
        self.text_ctrl_1 = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER | wx.TE_PROCESS_TAB)
        self.label_7 = wx.StaticText(self, -1, "Contact")
        self.text_ctrl_2 = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER | wx.TE_PROCESS_TAB)
        self.label_8 = wx.StaticText(self, -1, "DEO")
        self.text_ctrl_3 = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER | wx.TE_PROCESS_TAB)
        self.button_1 = wx.Button(self, -1, "Cancel")
        self.button_2 = wx.Button(self, -1, "OK")
        
        self.DB=db_operations()
        
        self.__set_properties()
        self.__do_layout()
        self.OnLoad()

        self.Bind(wx.EVT_TEXT, self.OnText, self.text_ctrl_1)
        self.Bind(wx.EVT_TEXT, self.OnText, self.text_ctrl_2)
        self.Bind(wx.EVT_TEXT, self.Ontext, self.text_ctrl_3)
        
        self.Bind(wx.EVT_BUTTON, self.OnCancel, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.OnOk, self.button_2)
        
        self.Bind(wx.EVT_CLOSE, self.OnClose)
       
        # end wxGlade
    def OnClose(self,event):
        
        event.Skip()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: Institution.__set_properties
        self.SetTitle("Institution")
        self.SetSize((550, 303))
        self.SetFocus()
        self.label_1.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_2.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.text_ctrl_5.SetFont(wx.Font(7, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.text_ctrl_5.SetMinSize((250, 27))
        self.label_4.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.text_ctrl_6.SetFont(wx.Font(7, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        
        self.label_6.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.text_ctrl_1.SetMinSize((250, 27))
        self.label_7.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.text_ctrl_2.SetMinSize((250, 27))
        self.label_8.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.text_ctrl_3.SetMinSize((250, 27))
        self.button_1.SetMinSize((80, 33))
        self.button_2.SetMinSize((80, 33))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: Institution.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1 = wx.GridSizer(5, 2, 3, 15)
        sizer_2.Add(self.label_1, 0, wx.LEFT, 110)
        grid_sizer_1.Add(self.label_2, 0, wx.TOP, 3)
        grid_sizer_1.Add(self.text_ctrl_5, 0, 0, 0)
        grid_sizer_1.Add(self.label_4, 0, wx.TOP, 5)
        grid_sizer_1.Add(self.text_ctrl_6, 0, wx.TOP, 5)
        grid_sizer_1.Add(self.label_6, 0, wx.TOP, 15)
        grid_sizer_1.Add(self.text_ctrl_1, 0, wx.TOP, 10)
        grid_sizer_1.Add(self.label_7, 0, wx.TOP, 25)
        grid_sizer_1.Add(self.text_ctrl_2, 0, wx.TOP, 20)
        grid_sizer_1.Add(self.label_8, 0, wx.TOP, 40)
        grid_sizer_1.Add(self.text_ctrl_3, 0, wx.TOP, 30)
        sizer_2.Add(grid_sizer_1, 1, wx.ALL | wx.EXPAND, 15)
        sizer_3.Add(self.button_1, 0, wx.LEFT, 180)
        sizer_3.Add(self.button_2, 0, wx.LEFT, 40)
        sizer_2.Add(sizer_3, 1, wx.TOP | wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL, 50)
        sizer_1.Add(sizer_2, 1, wx.TOP | wx.EXPAND, 20)
        self.SetSizer(sizer_1)
        self.Layout()
        self.Centre()
        # end wxGlade

    def OnText(self, event):  # wxGlade: Institution.<event_handler>
        
        event.Skip()

    def Ontext(self, event):  # wxGlade: Institution.<event_handler>
        
        event.Skip()
        
    def OnCancel(self, event):  # wxGlade: Institution.<event_handler>
        self.Close(True)
        event.Skip()
        
    def OnOk(self, event):  # wxGlade: Institution.<event_handler>
        
        if self.text_ctrl_1.Value=='admin' and self.text_ctrl_2.Value=='admin':
            
            
            self.DB.Set_School_Name(self.text_ctrl_3.Value)      
             
               
        elif  self.text_ctrl_1.Value=='theadmin' and self.text_ctrl_2.Value=='theadmin':
           self.DB.Set_School_Code(self.text_ctrl_3.Value)   
        else:
            try:
                self.DB.Set_School_Email(self.text_ctrl_1.Value)       
                self.DB.Set_School_Contact(self.text_ctrl_2.Value)
                self.DB.Set_School_DEO(self.text_ctrl_3.Value)
                dlg = wx.MessageDialog(self, 'Successfully Saved', '',wx.OK | wx.ICON_INFORMATION)
                dlg.ShowModal()
                dlg.Destroy()
            except:
                dlg = wx.MessageDialog(self, 'Could not save some values', '',wx.OK | wx.ICON_ERROR)
                dlg.ShowModal()
                dlg.Destroy()
                
                
            
        
        self.Close(True)
        event.Skip()
    def OnLoad(self):
        
        school=self.DB.Get_School_Name()
        self.text_ctrl_5.Value=school
        code=self.DB.Get_School_Code()
        self.text_ctrl_6.Value=code
        email=self.DB.Get_School_Email()
        place=self.DB.Get_School_DEO()
        contact=self.DB.Get_School_Contact()
        
        self.text_ctrl_1.Value=email
        self.text_ctrl_2.Value=contact
        self.text_ctrl_3.Value=place
        
        
 









class school_working_days(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: working_days.__init__
        kwds["style"] = wx.CAPTION | wx.CLOSE_BOX 
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, -1, "Year")
        self.combo_box_1 = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN | wx.CB_DROPDOWN | wx.CB_READONLY)
        self.label_5 = wx.StaticText(self, -1, "Total Working Days")
        self.label_2 = wx.StaticText(self, -1, " Term I")
        self.text_ctrl_1 = wx.TextCtrl(self, -1, "")
        self.label_3 = wx.StaticText(self, -1, "Term II")
        self.text_ctrl_2 = wx.TextCtrl(self, -1, "")
        self.label_4 = wx.StaticText(self, -1, "Final")
        self.text_ctrl_3 = wx.TextCtrl(self, -1, "")
        self.button_1 = wx.Button(self, -1, "Close")
        self.button_2 = wx.Button(self, -1, "Save")
        self.button_2.Enabled=False
        
        self.combo_box_1.SetSelection(0)
        self.DB=db_operations()
        self.load_year()

        self.__set_properties()
        self.__do_layout()
        self.YEAR='Select'

        self.Bind(wx.EVT_COMBOBOX, self.OnCombo, self.combo_box_1)
        self.Bind(wx.EVT_BUTTON, self.OnCancel, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.OnSave, self.button_2)
        
        self.OnLoad()
        
        self.Bind(wx.EVT_CLOSE, self.OnClose)
       
        # end wxGlade
    def load_year(self):
                    
        self.combo_box_1.Clear() #year combo
        
        
        years=self.DB.get_academic_year_list()
        years.insert(0,"Select Year")

        
        
        for item in years:
            self.combo_box_1.Append(str(item))
            
            
        self.combo_box_1.SetSelection(0) 
        
    def OnClose(self,event):
        
        event.Skip()
    def OnLoad(self):
        if self.YEAR!='Select':
            
            t1=self.DB.Get_Working_Days(self.YEAR,'1')
            t2=self.DB.Get_Working_Days(self.YEAR,'2')
            t3=self.DB.Get_Working_Days(self.YEAR,'3')
            
            if t1==None:t1=''
            if t2==None:t2=''
            if t3==None:t3=''
            self.text_ctrl_1.Value=str(t1)
            self.text_ctrl_2.Value=str(t2)
            self.text_ctrl_3.Value=str(t3)
            
    def __set_properties(self):
        # begin wxGlade: working_days.__set_properties
        self.SetTitle("working_days")
        self.SetSize((320, 350))
        self.label_1.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.combo_box_1.SetMinSize((150, 29))
        self.label_5.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.text_ctrl_1.SetMinSize((75, 33))
        self.text_ctrl_2.SetMinSize((75, 33))
        self.text_ctrl_3.SetMinSize((75, 33))
        self.button_1.SetMinSize((80, 33))
        self.button_2.SetMinSize((80, 33))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: working_days.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(4, 2, 10, 10)
        grid_sizer_1.Add(self.label_1, 0, wx.LEFT, 20)
        grid_sizer_1.Add(self.combo_box_1, 0, wx.RIGHT, 20)
        grid_sizer_1.Add(self.label_5, 0, wx.LEFT, 74)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add(self.label_2, 0, wx.LEFT | wx.TOP, 7)
        grid_sizer_1.Add(self.text_ctrl_1, 0, 0, 0)
        grid_sizer_1.Add(self.label_3, 0, wx.LEFT | wx.TOP, 7)
        grid_sizer_1.Add(self.text_ctrl_2, 0, 0, 0)
        grid_sizer_1.Add(self.label_4, 0, wx.LEFT | wx.TOP, 10)
        grid_sizer_1.Add(self.text_ctrl_3, 0, 0, 0)
        grid_sizer_1.Add(self.button_1, 0, wx.LEFT, 60)
        grid_sizer_1.Add(self.button_2, 0, wx.LEFT, 10)
        sizer_1.Add(grid_sizer_1, 1, wx.ALL | wx.EXPAND, 5)
        self.SetSizer(sizer_1)
        self.Layout()
        self.Centre()
        # end wxGlade

    def OnCombo(self, event):  # wxGlade: working_days.<event_handler>
        if self.combo_box_1.Value!='Select':
            YEAR=self.combo_box_1.Value
            self.YEAR=YEAR.split("-")[0]
            self.OnLoad()
            self.button_2.Enabled=True
        else:
            self.button_2.Enabled=False
            self.text_ctrl_1.Value=''
            self.text_ctrl_2.Value=''
            self.text_ctrl_3.Value=''
        event.Skip()

    def OnCancel(self, event):  # wxGlade: working_days.<event_handler>
        self.Close(True)
        event.Skip()

    def OnSave(self, event):  # wxGlade: working_days.<event_handler>
        t1=str(self.text_ctrl_1.Value)
        t2=str(self.text_ctrl_2.Value)
        t3=str(self.text_ctrl_3.Value)
        
        err=False
        if not self.text_ctrl_1.Value.isdigit() and not self.text_ctrl_1.Value=='':err=True;self.text_ctrl_1.Value=''
        if not self.text_ctrl_2.Value.isdigit() and not self.text_ctrl_2.Value=='':err=True;self.text_ctrl_2.Value=''
        if not self.text_ctrl_3.Value.isdigit() and not self.text_ctrl_3.Value=='':err=True;self.text_ctrl_3.Value=''
        if err:
            
            dlg = wx.MessageDialog(self, 'Working days should be a digit', '',wx.OK | wx.ICON_ERROR)
            dlg.ShowModal()
            dlg.Destroy()
            return 0
        
        try:
            self.DB.Set_Working_Days(self.YEAR,'1',self.text_ctrl_1.Value)
            self.DB.Set_Working_Days(self.YEAR,'2',self.text_ctrl_2.Value)
            self.DB.Set_Working_Days(self.YEAR,'3',self.text_ctrl_3.Value)
            dlg = wx.MessageDialog(self, 'Successfully Saved', '',wx.OK | wx.ICON_INFORMATION)
            dlg.ShowModal()
            dlg.Destroy()
            
        except:
            dlg = wx.MessageDialog(self, 'Some error occured', '',wx.OK | wx.ICON_ERROR)
            dlg.ShowModal()
            dlg.Destroy()
            
        event.Skip()




   
if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 =ce_settingst(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.ShowModal()
    frame_1.Destroy()

    app.MainLoop()    
 