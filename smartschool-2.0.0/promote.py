#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.4 on Wed Sep 10 15:37:13 2014


import wx



from dboperations import db_operations



class promote(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: promote.__init__
        kwds["style"] = wx.CAPTION | wx.CLOSE_BOX | wx.MINIMIZE_BOX | wx.SYSTEM_MENU | wx.RESIZE_BORDER | wx.TAB_TRAVERSAL | wx.CLIP_CHILDREN
        wx.Dialog.__init__(self, *args, **kwds)
        self.panel_2 = wx.ScrolledWindow(self, -1, style=wx.TAB_TRAVERSAL)
        self.label_10 = wx.StaticText(self.panel_2, -1, "Current Class Details")
        self.combo_box_1 = wx.ComboBox(self.panel_2, -1, choices=[], style=wx.CB_DROPDOWN | wx.CB_SIMPLE | wx.CB_DROPDOWN | wx.CB_READONLY)
        self.combo_box_2 = wx.ComboBox(self.panel_2, -1, choices=["Select Standard", "8", "9", "10"], style=wx.CB_DROPDOWN | wx.CB_SIMPLE | wx.CB_DROPDOWN | wx.CB_READONLY)
        self.combo_box_3 = wx.ComboBox(self.panel_2, -1, choices=['Select Division'], style=wx.CB_DROPDOWN | wx.CB_SIMPLE | wx.CB_DROPDOWN | wx.CB_READONLY)
        self.static_line_1 = wx.StaticLine(self.panel_2, -1, style=wx.LI_VERTICAL)
        self.label_11 = wx.StaticText(self.panel_2, -1, "Promote/Move To")
        self.combo_box_4 = wx.ComboBox(self.panel_2, -1, choices=[], style=wx.CB_DROPDOWN | wx.CB_SIMPLE | wx.CB_DROPDOWN | wx.CB_READONLY)
        self.combo_box_5 = wx.ComboBox(self.panel_2, -1, choices=["Select Standard", "8", "9", "10"], style=wx.CB_DROPDOWN | wx.CB_SIMPLE | wx.CB_DROPDOWN | wx.CB_READONLY)
        self.combo_box_6 = wx.ComboBox(self.panel_2, -1, choices=['Select Division'], style=wx.CB_DROPDOWN | wx.CB_SIMPLE | wx.CB_DROPDOWN | wx.CB_READONLY)
        self.static_line_2 = wx.StaticLine(self.panel_2, -1)
        self.panel_1 = wx.Panel(self.panel_2, -1)
        allLoc = ['Admission No                       Name']
        self.check_list_box_1 = wx.CheckListBox(self.panel_1, -1, (60, 50), (30,30), allLoc)
        self.check_list_box_2 = wx.CheckListBox(self.panel_1, -1, (60, 50), wx.DefaultSize, [])
        
        #self.list_box_2 = wx.ListBox(self.panel_1, -1, choices=[])
        #self.list_box_3 = wx.ListBox(self.panel_1, -1, choices=[])
        
        self.button_cancel = wx.Button(self.panel_2, -1, "Close")
        self.button_proceed = wx.Button(self.panel_2, -1, "Proceed")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_COMBOBOX, self.oncombo_year1, self.combo_box_1)
        self.Bind(wx.EVT_COMBOBOX, self.oncombo_class1, self.combo_box_2)
        self.Bind(wx.EVT_COMBOBOX, self.oncombo_div1, self.combo_box_3)
        self.Bind(wx.EVT_COMBOBOX, self.oncombo_year2, self.combo_box_4)
        self.Bind(wx.EVT_COMBOBOX, self.oncombo_class2, self.combo_box_5)
        self.Bind(wx.EVT_COMBOBOX, self.oncombo_div2, self.combo_box_6)
        self.Bind(wx.EVT_CHECKLISTBOX, self.on_check, self.check_list_box_1)
        self.Bind(wx.EVT_CHECKLISTBOX, self.on_check_2, self.check_list_box_2)
        self.Bind(wx.EVT_BUTTON, self.on_cancel, self.button_cancel)
        self.Bind(wx.EVT_BUTTON, self.on_proceed, self.button_proceed)
        self.checkedItems=()
        self.DB=db_operations()
        self.load_year(self.combo_box_1 ,self.combo_box_2 ,self.combo_box_3 )
        self.load_year(self.combo_box_4 ,self.combo_box_5 ,self.combo_box_6 )
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: promote.__set_properties
        self.SetTitle("Promote")
        self.SetSize((749, 710))
        self.label_10.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.static_line_1.SetMinSize((4, 173))
        self.label_11.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.check_list_box_1.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.static_line_2.SetMinSize((678, 5))
        self.button_cancel.SetMinSize((85, 33))
        self.button_proceed.SetMinSize((85, 33))
        self.panel_2.SetScrollRate(10, 10)
        
        
        self.combo_box_1.SetSelection(0)
        self.combo_box_2.SetSelection(0)
        self.combo_box_3.SetSelection(0)
        self.combo_box_4.SetSelection(0)
        self.combo_box_5.SetSelection(0)
        self.combo_box_6.SetSelection(0)
        
        self.combo_box_4.Enable(False)
        self.combo_box_5.Enable(False)
        self.combo_box_6.Enable(False)
        self.button_proceed.Enable(False)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: promote.__do_layout
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_8 = wx.BoxSizer(wx.VERTICAL)
        sizer_3_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_4.Add(self.label_10, 0, 0, 0)
        sizer_4.Add(self.combo_box_1, 0, wx.BOTTOM, 10)
        sizer_4.Add(self.combo_box_2, 0, wx.BOTTOM, 10)
        sizer_4.Add(self.combo_box_3, 0, wx.BOTTOM, 10)
        sizer_3_copy.Add(sizer_4, 0, wx.RIGHT | wx.EXPAND, 150)
        sizer_3_copy.Add(self.static_line_1, 0, wx.EXPAND, 0)
        sizer_5.Add(self.label_11, 0, 0, 0)
        sizer_5.Add(self.combo_box_4, 0, wx.BOTTOM, 10)
        sizer_5.Add(self.combo_box_5, 0, wx.BOTTOM, 10)
        sizer_5.Add(self.combo_box_6, 0, wx.BOTTOM, 10)
        sizer_3_copy.Add(sizer_5, 1, wx.LEFT | wx.EXPAND | wx.ALIGN_RIGHT, 100)
        sizer_2.Add(sizer_3_copy, 0, wx.EXPAND | wx.ALIGN_RIGHT, 0)
        sizer_2.Add(self.static_line_2, 0, wx.EXPAND, 0)
        sizer_8.Add(self.check_list_box_1, 0, wx.EXPAND, 0)
        sizer_8.Add(self.check_list_box_2, 1, wx.EXPAND, 0)
        sizer_7.Add(sizer_8, 1, wx.EXPAND, 0)
        self.panel_1.SetSizer(sizer_7)
        sizer_1.Add(self.panel_1, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_1, 1, wx.EXPAND, 0)
        sizer_6.Add(self.button_cancel, 0, wx.LEFT, 250)
        sizer_6.Add(self.button_proceed, 0, wx.LEFT, 50)
        sizer_2.Add(sizer_6, 0, wx.EXPAND, 0)
        self.panel_2.SetSizer(sizer_2)
        sizer_3.Add(self.panel_2, 1, wx.ALL | wx.EXPAND, 20)
        self.SetSizer(sizer_3)
        self.Layout()
        self.Center()
        # end wxGlade
    def load_year(self,combo_box_1,combo_box_2,combo_box_3):
        
        # this window has two year,std, div combo sets both are managed here
                    
        combo_box_1.Clear() #year combo
        combo_box_3.Clear()# div combo
        combo_box_3.Append("Select Division")
        
        years=self.DB.get_academic_year_list()
        years.insert(0,"Select Year")

        
        
        for item in years:
            combo_box_1.Append(str(item))
            
            
        combo_box_1.SetSelection(0) 
        combo_box_2.SetSelection(0) 
        combo_box_3.SetSelection(0) 

    def oncombo_year1(self, event):  # wxGlade: promote.<event_handler>
        self.YEAR=self.combo_box_1.Value.split('-')[0]
        self.combo_box_2.SetSelection(0)
        self.combo_box_3.Clear()
        self.combo_box_3.Append('Select Division')  
        self.combo_box_3.SetSelection(0)
        self.combo_box_4.Enable(False)
        self.combo_box_5.Enable(False)
        self.combo_box_6.Enable(False)
        self.check_list_box_2.Clear()
        event.Skip()

    def oncombo_class1(self, event):  # wxGlade: promote.<event_handler>
        self.CLASS=self.combo_box_2.Value
        self.combo_box_3.Clear()
        
        self.load_div()
        self.combo_box_3.SetSelection(0)
        self.combo_box_4.Enable(False)
        self.combo_box_5.Enable(False)
        self.combo_box_6.Enable(False)
        self.check_list_box_2.Clear()
        event.Skip()

    def oncombo_div1(self, event):  # wxGlade: promote.<event_handler>
        if self.combo_box_3.Value!='Select Division':
            self.DIV=self.combo_box_3.Value
            self.combo_box_4.Enable(True)
            self.combo_box_5.Enable(True)
            self.combo_box_6.Enable(True)
            
            self.load_students()
        else:
            self.check_list_box_2.Clear()
            self.combo_box_4.Enable(False)
            self.combo_box_5.Enable(False)
            self.combo_box_6.Enable(False)
            
        self.combo_box_4.SetSelection(0)
        self.combo_box_5.SetSelection(0)
        self.combo_box_6.SetSelection(0)
        self.combo_box_6.Clear()
        event.Skip()
    def load_div(self,token='1'):
        # token 1 for one set of combos...token 2 for the other set
        
        if token!='1':
            divs=self.DB.Get_Div(self.YEAR2,self.CLASS2)
            
            divs=['Select Division']+divs
            divs=self.restrain_div(divs)
            for item in divs:
                self.combo_box_6.Append(str(item))   
        else:        
            divs=self.DB.Get_Div(self.YEAR,self.CLASS)
            divs=['Select Division']+divs
            
            for item in divs:
                self.combo_box_3.Append(str(item))   
    def oncombo_year2(self, event):  # wxGlade: promote.<event_handler>
        self.YEAR2=self.combo_box_4.Value.split('-')[0]
        self.combo_box_5.SetSelection(0)
        self.combo_box_6.Clear()
        self.combo_box_6.Append('Select Division') 
        self.combo_box_6.SetSelection(0)
        self.button_proceed.Enable(False)
        event.Skip()
        
       
    def oncombo_class2(self, event):  # wxGlade: promote.<event_handler>
        self.CLASS2=self.combo_box_5.Value
        self.combo_box_6.Clear()
        
        self.load_div('2')
        self.combo_box_6.SetSelection(0)
        self.button_proceed.Enable(False)
        event.Skip()

    def oncombo_div2(self, event):  # wxGlade: promote.<event_handler>
        if self.combo_box_6.Value!='Select Division':
            self.DIV2=self.combo_box_6.Value
            if self.checkedItems!=():
                self.button_proceed.Enable(True)
            else:
                self.button_proceed.Enable(False)
            
           
        else:
            self.button_proceed.Enable(False)
            
        
        event.Skip()

    def oncheck_all(self, event):  # wxGlade: promote.<event_handler>
        print "Event handler `oncheck_all' not implemented"
        event.Skip()
    def on_check(self,event):
        
        
        
        if self.check_list_box_1.IsChecked(0):
            self.check_all()
            self.checkedItems = self.check_list_box_2.GetChecked()
        else:
            
            self.uncheck_all()
            self.checkedItems = self.check_list_box_2.GetChecked()
            
        if self.combo_box_6.Value!='Select Division' and self.checkedItems!=():
            
            self.button_proceed.Enable(True)
        else:
            self.button_proceed.Enable(False)
    def on_check_2(self,event):
        
        
        self.checkedItems = self.check_list_box_2.GetChecked()
        if self.combo_box_6.Value!='Select Division' and self.checkedItems!=():
            
            self.button_proceed.Enable(True)
        else:
            self.button_proceed.Enable(False)
        print self.checkedItems
            
    def on_cancel(self, event):  # wxGlade: promote.<event_handler>
        self.Close()
        event.Skip()

    def on_proceed(self, event):  # wxGlade: promote.<event_handler>
        try:
            self.promote()
            dlg = wx.MessageDialog(self, 'Successfully promoted/changed', '',wx.OK | wx.ICON_INFORMATION)                  
            dlg.ShowModal()
            dlg.Destroy()
        except:
            dlg = wx.MessageDialog(self, 'Some error occured.Could not complete', '',wx.OK | wx.ICON_ERROR)                  
            dlg.ShowModal()
            dlg.Destroy()
        self.check_list_box_1.Check(0,False)
        event.Skip()
    def load_students(self):
        
        div_id=self.DB.Get_Div_Id(self.YEAR,self.CLASS,self.DIV)
        self.LIST=self.DB.Get_Unpromoted(div_id)
        self.check_list_box_2.Clear()
        for each in self.LIST:
            item='  '+each[3]+'                         '*2+each[4]
            self.check_list_box_2.Append(item)
    
    def check_all(self):
        
        for i in range(self.check_list_box_2.GetCount()):
            self.check_list_box_2.Check(i)
    def uncheck_all(self):
        
        for i in range(self.check_list_box_2.GetCount()):
            self.check_list_box_2.Check(i,False)
    def restrain_div(self,divs):
        new_divs=[]
        if self.CLASS==self.CLASS2 and self.YEAR==self.YEAR2:
            for div in divs  :
                if div!=self.DIV:
                    new_divs.append(div)      
                    
            return new_divs
        return divs
    def promote(self):
        
        query1='INSERT INTO T1 (STUDENT_ID, DIV_ID,ROLL,PROMOTED) VALUES(?,?,?,?)'
        query2='INSERT INTO T2 (STUDENT_ID, DIV_ID,ROLL,PROMOTED) VALUES(?,?,?,?)'
        query3='INSERT INTO T3 (STUDENT_ID, DIV_ID,ROLL,PROMOTED) VALUES(?,?,?,?)'
        
        query4='UPDATE T1 SET PROMOTED=1 WHERE ID=?'
        query5='UPDATE T2 SET PROMOTED=1 WHERE ID=?'
        query6='UPDATE T3 SET PROMOTED=1 WHERE ID=?'
        
        query7='UPDATE T1 SET DIV_ID=?,PROMOTED=0 WHERE ID=?'
        query8='UPDATE T2 SET DIV_ID=?,PROMOTED=0 WHERE ID=?'
        query9='UPDATE T3 SET DIV_ID=?,PROMOTED=0 WHERE ID=?'
        
        
        new_div_id=self.DB.Get_Div_Id(self.YEAR2,self.CLASS2,self.DIV2)
        for i in self.checkedItems:
            item=self.LIST[i]
            st_id=item[0]
            roll=item[5]
            promoted=0
            score_id=item[2]
            if self.YEAR==self.YEAR2:
                # if same year only updates div_id,(just changes class)
                
                self.DB.cur.execute(query7,(new_div_id,score_id))
                self.DB.cur.execute(query8,(new_div_id,score_id))
                self.DB.cur.execute(query9,(new_div_id,score_id))
                
            else:
                
                self.DB.cur.execute(query1,(st_id,new_div_id,roll,promoted))
                self.DB.cur.execute(query2,(st_id,new_div_id,roll,promoted))
                self.DB.cur.execute(query3,(st_id,new_div_id,roll,promoted))
                
                score_id=item[2]
                self.DB.cur.execute(query4,(score_id,))
                self.DB.cur.execute(query5,(score_id,))
                self.DB.cur.execute(query6,(score_id,))
                
        self.DB.con.commit()    
        self.load_students()


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 =promote(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.ShowModal()
    frame_1.Destroy()

    app.MainLoop()