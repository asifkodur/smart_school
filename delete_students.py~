#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.4 on Fri Sep 12 20:22:50 2014

import wx
from dboperations import db_operations

import THEME
# begin wxGlade: extracode
# end wxGlade


class delete_student(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: delete.__init__
        kwds["style"] = wx.MAXIMIZE | wx.CLOSE_BOX | wx.THICK_FRAME|wx.CAPTION
        wx.Dialog.__init__(self, *args, **kwds)
        self.panel_2 = wx.ScrolledWindow(self, -1, style=wx.TAB_TRAVERSAL)
        self.label_1 = wx.StaticText(self.panel_2, -1, "Specify Class")
        self.combo_box_1 = wx.ComboBox(self.panel_2, -1, choices=[], style=wx.CB_DROPDOWN | wx.CB_READONLY )
        self.combo_box_2 = wx.ComboBox(self.panel_2, -1, choices=["Select Standard", "8", "9", "10"], style=wx.CB_DROPDOWN | wx.CB_READONLY )
        self.combo_box_3 = wx.ComboBox(self.panel_2, -1, choices=['Select Division'], style=wx.CB_DROPDOWN | wx.CB_READONLY )
        self.static_line_2 = wx.StaticLine(self.panel_2, -1)
        self.panel_1 = wx.Panel(self.panel_2, -1)
        
        self.check_list_box_1 = wx.CheckListBox(self.panel_1, -1, (60, 50), (30,30), ['Admission No                       Name'])
        self.check_list_box_2 = wx.CheckListBox(self.panel_1, -1, (60, 50), wx.DefaultSize, [])
        self.button_close = wx.Button(self.panel_2, -1, "Close")
        self.button_proceed = wx.Button(self.panel_2, -1, "Proceed")

        self.__set_properties()
        self.__do_layout()
        
        self.Bind(wx.EVT_COMBOBOX, self.oncombo_year, self.combo_box_1)
        self.Bind(wx.EVT_COMBOBOX, self.oncombo_class, self.combo_box_2)
        self.Bind(wx.EVT_COMBOBOX, self.oncombo_div, self.combo_box_3)
        self.Bind(wx.EVT_CHECKLISTBOX, self.on_check, self.check_list_box_1)
        self.Bind(wx.EVT_CHECKLISTBOX, self.on_check_2, self.check_list_box_2)
        self.Bind(wx.EVT_BUTTON, self.on_close, self.button_close)
        self.Bind(wx.EVT_BUTTON, self.on_proceed, self.button_proceed)
        
        self.checkedItems=()
        self.DB=db_operations()
        self.load_year()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: delete.__set_properties
        self.SetTitle("Delete Students")
        
        
        self.SetBackgroundColour(THEME.WINDOW_BG_COLOR)
        self.panel_1.SetBackgroundColour(THEME.WINDOW_BG_COLOR)
        self.panel_2.SetBackgroundColour(THEME.WINDOW_BG_COLOR)
        self.button_close.SetBackgroundColour(THEME.BUTTON_BG_COLOR)
        self.button_close.SetForegroundColour(THEME.BUTTON_FG_COLOR)        
        self.button_proceed.SetBackgroundColour(THEME.BUTTON_BG_COLOR)
        self.button_proceed.SetForegroundColour(THEME.BUTTON_FG_COLOR)
        #self.panel_2.SetForegroundColour(theme.BUTTON_BG_COLOR)
        
        self.SetSize((749, 710))
        self.label_1.SetFont(wx.Font(12, wx.DEFAULT, wx.ITALIC, wx.BOLD, 1, ""))
        self.check_list_box_1.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))

        self.static_line_2.SetMinSize((678, 5))
        self.button_close.SetMinSize(THEME.BUTTON_SIZE_NORMAL)
        self.button_proceed.SetMinSize(THEME.BUTTON_SIZE_NORMAL)
        self.combo_box_1.SetMinSize(THEME.COMBO_SIZE_NORMAL)
        self.combo_box_2.SetMinSize(THEME.COMBO_SIZE_NORMAL)
        self.combo_box_3.SetMinSize(THEME.COMBO_SIZE_NORMAL)
        
        
        self.panel_2.SetScrollRate(10, 10)
        
        self.combo_box_1.SetSelection(0)
        self.combo_box_2.SetSelection(0)
        self.combo_box_3.SetSelection(0)
        
        self.button_proceed.Enable(False)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: delete.__do_layout
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_8 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_12 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_14 = wx.BoxSizer(wx.VERTICAL)
        sizer_13 = wx.BoxSizer(wx.VERTICAL)
        sizer_15 = wx.BoxSizer(wx.VERTICAL)
        sizer_16 = wx.BoxSizer(wx.VERTICAL)
        sizer_16.Add(self.label_1, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_5.Add(sizer_16, 1, wx.EXPAND, 0)
        sizer_15.Add(self.combo_box_1, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 20)
        sizer_5.Add(sizer_15, 1, wx.EXPAND, 0)
        sizer_13.Add(self.combo_box_2, 0, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 10)
        sizer_5.Add(sizer_13, 1, wx.EXPAND, 0)
        sizer_14.Add(self.combo_box_3, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_12.Add(sizer_14, 1, wx.EXPAND, 0)
        sizer_5.Add(sizer_12, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_5, 0, wx.EXPAND, 0)
        sizer_2.Add(self.static_line_2, 0, wx.EXPAND, 0)
        sizer_8.Add(self.check_list_box_1, 0, wx.EXPAND, 0)
        sizer_8.Add(self.check_list_box_2, 1, wx.EXPAND, 0)
        sizer_7.Add(sizer_8, 1, wx.EXPAND, 0)
        self.panel_1.SetSizer(sizer_7)
        sizer_1.Add(self.panel_1, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_1, 1, wx.EXPAND, 0)
        sizer_6.Add(self.button_close, 0, wx.LEFT, 50)
        sizer_6.Add(self.button_proceed, 0, wx.LEFT, 50)
        #sizer_2.Add(sizer_6, 0, wx.EXPAND, 0)
        sizer_2.Add(sizer_6, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        self.panel_2.SetSizer(sizer_2)
        sizer_3.Add(self.panel_2, 1, wx.ALL | wx.EXPAND, 20)
        self.SetSizer(sizer_3)
        self.Layout()
        self.Centre()
        # end wxGlade
    def load_year(self):
                    
        self.combo_box_1.Clear() #year combo
        self.combo_box_3.Clear()# div combo
        self.combo_box_3.Append("Select Division")
        
        years=self.DB.get_academic_year_list()
        years.insert(0,"Select Year")

        
        
        for item in years:
            self.combo_box_1.Append(str(item))
            
            
        self.combo_box_1.SetSelection(0) 
        self.combo_box_2.SetSelection(0) 
        self.combo_box_3.SetSelection(0) 

    def oncombo_year(self, event):  # wxGlade: promote.<event_handler>
        
        self.YEAR=self.combo_box_1.Value.split('-')[0]
        self.combo_box_2.SetSelection(0)
        self.combo_box_3.Clear()
        self.combo_box_3.Append('Select Division')  
        self.combo_box_3.SetSelection(0)
        
        self.check_list_box_2.Clear()
        self.check_list_box_1.Check(0,False)
        self.button_proceed.Enable(False)
        event.Skip()

    def oncombo_class(self, event):  # wxGlade: promote.<event_handler>
        
        self.CLASS=self.combo_box_2.Value
        self.combo_box_3.Clear()
        
        self.load_div()
        self.combo_box_3.SetSelection(0)
        
        self.check_list_box_2.Clear()
        self.check_list_box_1.Check(0,False)
        self.button_proceed.Enable(False)
        event.Skip()

    def oncombo_div(self, event):  # wxGlade: promote.<event_handler>
        if self.combo_box_3.Value!='Select Division':
            self.DIV=self.combo_box_3.Value
            
            
            self.load_students()
            
        else:
            self.check_list_box_2.Clear()
            
        self.button_proceed.Enable(False)
        self.check_list_box_1.Check(0,False)
            
        
        event.Skip()
    def load_div(self,token='1'):
        # token 1 for one set of combos...token 2 for the other set
        
        if token!='1':
            divs=self.DB.Get_Div(self.YEAR2,self.CLASS2)
            
            divs=['Select Division']+divs
            divs=self.restrain_div(divs)
            for item in divs:
                self.combo_box_6.Append(str(item))   
        else:        
            divs=self.DB.Get_Div(self.YEAR,self.CLASS)
            divs=['Select Division']+divs
            
            for item in divs:
                self.combo_box_3.Append(str(item))   
    
    def on_check(self,event):
        
        
        
        if self.check_list_box_1.IsChecked(0):
            self.check_all()
            self.checkedItems = self.check_list_box_2.GetChecked()
        else:
            
            self.uncheck_all()
            self.checkedItems = self.check_list_box_2.GetChecked()
            
        if  self.checkedItems!=():
            
            self.button_proceed.Enable(True)
        else:
            self.button_proceed.Enable(False)
    def on_check_2(self,event):
        
        
        self.checkedItems = self.check_list_box_2.GetChecked()
        if self.checkedItems!=():
            
            self.button_proceed.Enable(True)
        else:
            self.button_proceed.Enable(False)
        print self.checkedItems
            
    def on_close(self, event):  # wxGlade: promote.<event_handler>
        self.Close()
        event.Skip()

    def on_proceed(self, event):  # wxGlade: promote.<event_handler>
        msg="Are sure you want to delete ?"
        dlg = wx.MessageDialog(self, msg,"Warning", wx.YES_NO | wx.ICON_QUESTION)
        result = dlg.ShowModal()# == wx.ID_YES
        if result==wx.ID_YES:
                
            
            try:
                self.delete()
                dlg = wx.MessageDialog(self, 'Successfully deleted students from this class', '',wx.OK | wx.ICON_INFORMATION)                  
                dlg.ShowModal()
                dlg.Destroy()
            except:
                dlg = wx.MessageDialog(self, 'Some error occured.Could not complete', '',wx.OK | wx.ICON_ERROR)                  
                dlg.ShowModal()
                dlg.Destroy()
            self.check_list_box_1.Check(0,False)
            self.button_proceed.Enable(False)
            self.load_students()
        event.Skip()
    def load_students(self):
        
        div_id=self.DB.Get_Div_Id(self.YEAR,self.CLASS,self.DIV)
        self.LIST=self.get_student_list(div_id)
        self.check_list_box_2.Clear()
        for each in self.LIST:
            item='  '+each[3]+'                         '*2+each[4]
            self.check_list_box_2.Append(item)
    def get_student_list(self,div_id ):
        
        query="SELECT STUDENT_ID,ID,ROLL FROM T1 WHERE DIV_ID="+str(div_id  )
        
        
      
        self.DB.cur.execute(query)
        
        score_row=0
        score_col=0
        list=[]
        for each_row in self.DB.cur.fetchall():
            
            ad_no,name= self.DB.Get_Student_Info(each_row[0])
            list.append([each_row[0],div_id,each_row[1],ad_no,name,each_row[2]])
           
        return list
    def check_all(self):
        
        for i in range(self.check_list_box_2.GetCount()):
            self.check_list_box_2.Check(i)
    def uncheck_all(self):
        
        for i in range(self.check_list_box_2.GetCount()):
            self.check_list_box_2.Check(i,False)
    def delete(self):
        
        new_div_id=self.DB.Get_Div_Id(self.YEAR,self.CLASS,self.DIV)
        
        for i in self.checkedItems:
            item=self.LIST[i]
            st_id=item[0]
            
            score_id=item[2]
            self.DB.RemoveScore(score_id)     #Passing score id
            
            #Checking if the student has any other record in any other  div
            query='SELECT * FROM T1 WHERE STUDENT_ID=?'
            self.DB.cur.execute(query,(st_id,))
            if self.DB.cur.fetchone()==None:
                self.DB.RemoveStudent(st_id)  #passing student_id



if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 =delete_student(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.ShowModal()
    frame_1.Destroy()

    app.MainLoop()