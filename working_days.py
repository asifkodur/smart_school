#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.4 on Sun Aug 10 19:41:27 2014

import wx
from dboperations import db_operations

# begin wxGlade: extracode
# end wxGlade


class school_working_days(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: working_days.__init__
        kwds["style"] = wx.CAPTION | wx.CLOSE_BOX | wx.MINIMIZE_BOX
        wx.Frame.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, -1, "Year")
        self.combo_box_1 = wx.ComboBox(self, -1, choices=[ ], style=wx.CB_DROPDOWN | wx.CB_DROPDOWN | wx.CB_READONLY)
        self.label_5 = wx.StaticText(self, -1, "Total Working Days")
        self.label_2 = wx.StaticText(self, -1, " Term I")
        self.text_ctrl_1 = wx.TextCtrl(self, -1, "")
        self.label_3 = wx.StaticText(self, -1, "Term II")
        self.text_ctrl_2 = wx.TextCtrl(self, -1, "")
        self.label_4 = wx.StaticText(self, -1, "Final")
        self.text_ctrl_3 = wx.TextCtrl(self, -1, "")
        self.button_1 = wx.Button(self, -1, "Cancel")
        self.button_2 = wx.Button(self, -1, "Save")
        self.button_2.Enabled=False
        
        self.combo_box_1.SetSelection(0)
        self.DB=db_operations()

        self.__set_properties()
        self.__do_layout()
        self.YEAR='Select'

        self.Bind(wx.EVT_COMBOBOX, self.OnCombo, self.combo_box_1)
        self.Bind(wx.EVT_BUTTON, self.OnCancel, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.OnSave, self.button_2)
        
        self.load_year()
        self.OnLoad()
        
        # end wxGlade
    def load_year(self):
                    
            self.combo_box_1.Clear() #year combo
            
            
            
            years=self.DB.get_academic_year_list()
            years.insert(0,"Select")

            
            
            for item in years:
                self.combo_box_1.Append(str(item))
                
            self.combo_box_1.SetSelection(0) 
 
    def OnLoad(self):
        if self.YEAR!='Select':
            
            t1=self.DB.Get_Working_Days(self.YEAR,'1')
            t2=self.DB.Get_Working_Days(self.YEAR,'2')
            t3=self.DB.Get_Working_Days(self.YEAR,'3')
            
            if t1==None:t1=''
            if t2==None:t2=''
            if t3==None:t3=''
            self.text_ctrl_1.Value=str(t1)
            self.text_ctrl_2.Value=str(t2)
            self.text_ctrl_3.Value=str(t3)
            
    def __set_properties(self):
        # begin wxGlade: working_days.__set_properties
        self.SetTitle("working_days")
        self.SetSize((320, 350))
        self.label_1.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.combo_box_1.SetMinSize((150, 29))
        self.label_5.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.text_ctrl_1.SetMinSize((75, 33))
        self.text_ctrl_2.SetMinSize((75, 33))
        self.text_ctrl_3.SetMinSize((75, 33))
        self.button_1.SetMinSize((80, 33))
        self.button_2.SetMinSize((80, 33))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: working_days.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(4, 2, 10, 10)
        grid_sizer_1.Add(self.label_1, 0, wx.LEFT, 20)
        grid_sizer_1.Add(self.combo_box_1, 0, wx.RIGHT, 20)
        grid_sizer_1.Add(self.label_5, 0, wx.LEFT, 74)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add(self.label_2, 0, wx.LEFT | wx.TOP, 7)
        grid_sizer_1.Add(self.text_ctrl_1, 0, 0, 0)
        grid_sizer_1.Add(self.label_3, 0, wx.LEFT | wx.TOP, 7)
        grid_sizer_1.Add(self.text_ctrl_2, 0, 0, 0)
        grid_sizer_1.Add(self.label_4, 0, wx.LEFT | wx.TOP, 10)
        grid_sizer_1.Add(self.text_ctrl_3, 0, 0, 0)
        grid_sizer_1.Add(self.button_1, 0, wx.LEFT, 60)
        grid_sizer_1.Add(self.button_2, 0, wx.LEFT, 10)
        sizer_1.Add(grid_sizer_1, 1, wx.ALL | wx.EXPAND, 5)
        self.SetSizer(sizer_1)
        self.Layout()
        self.Centre()
        # end wxGlade

    def OnCombo(self, event):  # wxGlade: working_days.<event_handler>
        if self.combo_box_1.Value!='Select':
            YEAR=self.combo_box_1.Value
            self.YEAR=YEAR.split("-")[0]
            self.OnLoad()
            self.button_2.Enabled=True
        else:
            self.button_2.Enabled=False
            self.text_ctrl_1.Value=''
            self.text_ctrl_2.Value=''
            self.text_ctrl_3.Value=''
        event.Skip()

    def OnCancel(self, event):  # wxGlade: working_days.<event_handler>
        self.Close(True)
        event.Skip()

    def OnSave(self, event):  # wxGlade: working_days.<event_handler>
        t1=str(self.text_ctrl_1.Value)
        t2=str(self.text_ctrl_2.Value)
        t3=str(self.text_ctrl_3.Value)
        
        err=False
        if not self.text_ctrl_1.Value.isdigit() and not self.text_ctrl_1.Value=='':err=True;self.text_ctrl_1.Value=''
        if not self.text_ctrl_2.Value.isdigit() and not self.text_ctrl_2.Value=='':err=True;self.text_ctrl_2.Value=''
        if not self.text_ctrl_3.Value.isdigit() and not self.text_ctrl_3.Value=='':err=True;self.text_ctrl_3.Value=''
        if err:
            
            dlg = wx.MessageDialog(self, 'Working days should be a digit', '',wx.OK | wx.ICON_ERROR)
            dlg.ShowModal()
            dlg.Destroy()
            return 0
        
        try:
            self.DB.Set_Working_Days(self.YEAR,'1',self.text_ctrl_1.Value)
            self.DB.Set_Working_Days(self.YEAR,'2',self.text_ctrl_2.Value)
            self.DB.Set_Working_Days(self.YEAR,'3',self.text_ctrl_3.Value)
            dlg = wx.MessageDialog(self, 'Successfully Saved', '',wx.OK | wx.ICON_INFORMATION)
            dlg.ShowModal()
            dlg.Destroy()
            
        except:
            dlg = wx.MessageDialog(self, 'Some error occured', '',wx.OK | wx.ICON_ERROR)
            dlg.ShowModal()
            dlg.Destroy()
            
        event.Skip()

# end of class working_days
if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    working_days = school_working_days(None, -1, "")
    app.SetTopWindow(working_days)
    working_days.Show()
    app.MainLoop()
